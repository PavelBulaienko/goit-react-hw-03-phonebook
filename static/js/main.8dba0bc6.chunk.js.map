{"version":3,"sources":["components/Contacts.js","components/Phonebook.js","components/App.js","index.js"],"names":["Contacts","contacts","handleDelete","className","map","contact","name","number","type","onClick","id","Phonebook","state","filter","nameCheking","filteredContacts","forEach","filterItem","push","length","handleInputName","e","setState","target","value","handleInputContact","handleAddContact","preventDefault","prevState","isAlreadyInContacts","alert","shortid","generate","handleInputFilter","filteredNames","toLowerCase","includes","this","JSON","parse","localStorage","getItem","setItem","stringify","pattern","title","required","onChange","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dba0bc6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Contacts = ({ contacts, handleDelete }) => (\r\n  <ul className=\"nameList\">\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id} className=\"item\">\r\n        <p className=\"name\">\r\n          {contact.name}: {contact.number}\r\n        </p>\r\n        <button type=\"button\" onClick={handleDelete(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default Contacts;\r\n","import { Component } from 'react';\r\nimport Contacts from './Contacts';\r\nimport shortid from 'shortid';\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: [],\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState(JSON.parse(localStorage.getItem('contacts')));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('contacts', JSON.stringify(this.state));\r\n  }\r\n\r\n  nameCheking = () => {\r\n    let filteredContacts = [];\r\n    const { contacts, filter } = this.state;\r\n    contacts.forEach((contact) => {\r\n      filter.forEach((filterItem) => {\r\n        if (contact.name === filterItem) {\r\n          filteredContacts.push(contact);\r\n        }\r\n      });\r\n    });\r\n    if (filter.length === 0) {\r\n      filteredContacts = contacts;\r\n    }\r\n\r\n    return filteredContacts;\r\n  };\r\n  handleInputName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n  handleInputContact = (e) => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    const prevState = this.state;\r\n    let isAlreadyInContacts = false;\r\n\r\n    this.state.contacts.forEach((contact) => {\r\n      if (this.state.name === contact.name) {\r\n        alert(this.state.name + ' is already in contacts');\r\n        isAlreadyInContacts = true;\r\n      }\r\n    });\r\n    if (!isAlreadyInContacts) {\r\n      this.setState({\r\n        contacts: [\r\n          {\r\n            name: this.state.name,\r\n            id: shortid.generate(),\r\n            number: this.state.number,\r\n          },\r\n          ...prevState.contacts,\r\n        ],\r\n      });\r\n    }\r\n  };\r\n  handleInputFilter = (e) => {\r\n    const names = this.state.contacts.map((contact) => contact.name);\r\n    const filteredNames = names.map((name) => {\r\n      if (name.toLowerCase().includes(e.target.value.toLowerCase())) {\r\n        return name;\r\n      } else return false;\r\n    });\r\n    this.setState({ filter: filteredNames });\r\n  };\r\n  handleDelete = (id) => {\r\n    const closureHandleDelete = () => {\r\n      const prevState = this.state;\r\n      this.setState({\r\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n      });\r\n    };\r\n    return closureHandleDelete;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"form\">\r\n          <label className=\"nameLabel\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInputName}\r\n            className=\"nameInput\"\r\n          />\r\n          <label className=\"numberLabel\">Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInputContact}\r\n            className=\"numberInput\"\r\n          />\r\n          <button type=\"submit\" onClick={this.handleAddContact}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <h2>Contacts: </h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleInputFilter}\r\n          className=\"nameFilter\"\r\n        />\r\n        <Contacts contacts={this.nameCheking()} handleDelete={this.handleDelete} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Phonebook;\r\n","import '../style/App.css';\nimport Phonebook from './Phonebook';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}